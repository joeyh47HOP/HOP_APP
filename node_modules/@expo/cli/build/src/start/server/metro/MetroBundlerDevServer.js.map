{"version":3,"sources":["../../../../../src/start/server/metro/MetroBundlerDevServer.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { getConfig } from '@expo/config';\nimport * as runtimeEnv from '@expo/env';\nimport { SerialAsset } from '@expo/metro-config/build/serializer/serializerAssets';\nimport chalk from 'chalk';\nimport fetch from 'node-fetch';\nimport path from 'path';\n\nimport { bundleApiRoute, rebundleApiRoute } from './bundleApiRoutes';\nimport { createRouteHandlerMiddleware } from './createServerRouteMiddleware';\nimport { fetchManifest } from './fetchRouterManifest';\nimport { instantiateMetroAsync } from './instantiateMetro';\nimport { metroWatchTypeScriptFiles } from './metroWatchTypeScriptFiles';\nimport { getRouterDirectoryWithManifest, isApiRouteConvention } from './router';\nimport { observeApiRouteChanges, observeFileChanges } from './waitForMetroToObserveTypeScriptFile';\nimport { Log } from '../../../log';\nimport getDevClientProperties from '../../../utils/analytics/getDevClientProperties';\nimport { logEventAsync } from '../../../utils/analytics/rudderstackClient';\nimport { CommandError } from '../../../utils/errors';\nimport { getFreePortAsync } from '../../../utils/port';\nimport { BundlerDevServer, BundlerStartOptions, DevServerInstance } from '../BundlerDevServer';\nimport { getStaticRenderFunctions } from '../getStaticRenderFunctions';\nimport { ContextModuleSourceMapsMiddleware } from '../middleware/ContextModuleSourceMapsMiddleware';\nimport { CreateFileMiddleware } from '../middleware/CreateFileMiddleware';\nimport { FaviconMiddleware } from '../middleware/FaviconMiddleware';\nimport { HistoryFallbackMiddleware } from '../middleware/HistoryFallbackMiddleware';\nimport { InterstitialPageMiddleware } from '../middleware/InterstitialPageMiddleware';\nimport {\n  createBundleUrlPath,\n  resolveMainModuleName,\n  shouldEnableAsyncImports,\n} from '../middleware/ManifestMiddleware';\nimport { ReactDevToolsPageMiddleware } from '../middleware/ReactDevToolsPageMiddleware';\nimport {\n  DeepLinkHandler,\n  RuntimeRedirectMiddleware,\n} from '../middleware/RuntimeRedirectMiddleware';\nimport { ServeStaticMiddleware } from '../middleware/ServeStaticMiddleware';\nimport { prependMiddleware } from '../middleware/mutations';\nimport { startTypescriptTypeGenerationAsync } from '../type-generation/startTypescriptTypeGeneration';\n\nexport class ForwardHtmlError extends CommandError {\n  constructor(\n    message: string,\n    public html: string,\n    public statusCode: number\n  ) {\n    super(message);\n  }\n}\n\nconst debug = require('debug')('expo:start:server:metro') as typeof console.log;\n\n/** Default port to use for apps running in Expo Go. */\nconst EXPO_GO_METRO_PORT = 8081;\n\n/** Default port to use for apps that run in standard React Native projects or Expo Dev Clients. */\nconst DEV_CLIENT_METRO_PORT = 8081;\n\nexport class MetroBundlerDevServer extends BundlerDevServer {\n  private metro: import('metro').Server | null = null;\n\n  get name(): string {\n    return 'metro';\n  }\n\n  async resolvePortAsync(options: Partial<BundlerStartOptions> = {}): Promise<number> {\n    const port =\n      // If the manually defined port is busy then an error should be thrown...\n      options.port ??\n      // Otherwise use the default port based on the runtime target.\n      (options.devClient\n        ? // Don't check if the port is busy if we're using the dev client since most clients are hardcoded to 8081.\n          Number(process.env.RCT_METRO_PORT) || DEV_CLIENT_METRO_PORT\n        : // Otherwise (running in Expo Go) use a free port that falls back on the classic 8081 port.\n          await getFreePortAsync(EXPO_GO_METRO_PORT));\n\n    return port;\n  }\n\n  async getExpoRouterRoutesManifestAsync({ appDir }: { appDir: string }) {\n    const manifest = await fetchManifest(this.projectRoot, {\n      asJson: true,\n      appDir,\n    });\n\n    if (!manifest) {\n      throw new CommandError(\n        'EXPO_ROUTER_SERVER_MANIFEST',\n        'Unexpected error: server manifest could not be fetched.'\n      );\n    }\n\n    return manifest;\n  }\n\n  async exportExpoRouterApiRoutesAsync({\n    mode,\n    appDir,\n    outputDir,\n  }: {\n    mode: 'development' | 'production';\n    appDir: string;\n    outputDir: string;\n  }) {\n    const manifest = await this.getExpoRouterRoutesManifestAsync({\n      appDir,\n    });\n\n    const files: Map<string, string> = new Map();\n\n    for (const route of manifest.apiRoutes) {\n      const filepath = path.join(appDir, route.file);\n      const contents = await bundleApiRoute(this.projectRoot, filepath, {\n        mode,\n        appDir,\n        port: this.getInstance()?.location.port,\n        shouldThrow: true,\n      });\n      const artifactFilename = path.join(\n        outputDir,\n        path.relative(appDir, filepath.replace(/\\.[tj]sx?$/, '.js'))\n      );\n      files.set(artifactFilename, contents!);\n      // Remap the manifest files to represent the output files.\n      route.file = artifactFilename;\n    }\n\n    return { manifest, files };\n  }\n\n  async composeResourcesWithHtml({\n    mode,\n    resources,\n    template,\n    devBundleUrl,\n    basePath,\n  }: {\n    mode: 'development' | 'production';\n    resources: SerialAsset[];\n    template: string;\n    /** asset prefix used for deploying to non-standard origins like GitHub pages. */\n    basePath: string;\n    devBundleUrl?: string;\n  }): Promise<string> {\n    if (!resources) {\n      return '';\n    }\n    const isDev = mode === 'development';\n    return htmlFromSerialAssets(resources, {\n      dev: isDev,\n      template,\n      basePath,\n      bundleUrl: isDev ? devBundleUrl : undefined,\n    });\n  }\n\n  async getStaticRenderFunctionAsync({\n    mode,\n    minify = mode !== 'development',\n  }: {\n    mode: 'development' | 'production';\n    minify?: boolean;\n  }) {\n    const url = this.getDevServerUrl()!;\n\n    const { getStaticContent, getManifest } = await getStaticRenderFunctions(\n      this.projectRoot,\n      url,\n      {\n        minify,\n        dev: mode !== 'production',\n        // Ensure the API Routes are included\n        environment: 'node',\n      }\n    );\n    return {\n      // Get routes from Expo Router.\n      manifest: await getManifest({ fetchData: true, preserveApiRoutes: false }),\n      // Get route generating function\n      async renderAsync(path: string) {\n        return await getStaticContent(new URL(path, url));\n      },\n    };\n  }\n\n  async getStaticResourcesAsync({\n    mode,\n    minify = mode !== 'development',\n    includeMaps,\n  }: {\n    mode: string;\n    minify?: boolean;\n    includeMaps?: boolean;\n  }): Promise<SerialAsset[]> {\n    const devBundleUrlPathname = createBundleUrlPath({\n      platform: 'web',\n      mode,\n      minify,\n      environment: 'client',\n      serializerOutput: 'static',\n      serializerIncludeMaps: includeMaps,\n      mainModuleName: resolveMainModuleName(this.projectRoot, { platform: 'web' }),\n      lazy: shouldEnableAsyncImports(this.projectRoot),\n    });\n\n    const bundleUrl = new URL(devBundleUrlPathname, this.getDevServerUrl()!);\n\n    // Fetch the generated HTML from our custom Metro serializer\n    const results = await fetch(bundleUrl.toString());\n\n    const txt = await results.text();\n\n    // console.log('STAT:', results.status, results.statusText);\n    let data: any;\n    try {\n      data = JSON.parse(txt);\n    } catch (error: any) {\n      debug(txt);\n\n      // Metro can throw this error when the initial module id cannot be resolved.\n      if (!results.ok && txt.startsWith('<!DOCTYPE html>')) {\n        throw new ForwardHtmlError(\n          `Metro failed to bundle the project. Check the console for more information.`,\n          txt,\n          results.status\n        );\n      }\n\n      Log.error(\n        'Failed to generate resources with Metro, the Metro config may not be using the correct serializer. Ensure the metro.config.js is extending the expo/metro-config and is not overriding the serializer.'\n      );\n      throw error;\n    }\n\n    // NOTE: This could potentially need more validation in the future.\n    if (Array.isArray(data)) {\n      return data;\n    }\n\n    if (data != null && (data.errors || data.type?.match(/.*Error$/))) {\n      // {\n      //   type: 'InternalError',\n      //   errors: [],\n      //   message: 'Metro has encountered an error: While trying to resolve module `stylis` from file `/Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js`, the package `/Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/stylis/package.json` was successfully found. However, this package itself specifies a `main` module field that could not be resolved (`/Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/stylis/dist/stylis.mjs`. Indeed, none of these files exist:\\n' +\n      //     '\\n' +\n      //     '  * /Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/stylis/dist/stylis.mjs(.web.ts|.ts|.web.tsx|.tsx|.web.js|.js|.web.jsx|.jsx|.web.json|.json|.web.cjs|.cjs|.web.scss|.scss|.web.sass|.sass|.web.css|.css)\\n' +\n      //     '  * /Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/stylis/dist/stylis.mjs/index(.web.ts|.ts|.web.tsx|.tsx|.web.js|.js|.web.jsx|.jsx|.web.json|.json|.web.cjs|.cjs|.web.scss|.scss|.web.sass|.sass|.web.css|.css): /Users/evanbacon/Documents/GitHub/lab/emotion-error-test/node_modules/metro/src/node-haste/DependencyGraph.js (289:17)\\n' +\n      //     '\\n' +\n      //     '\\x1B[0m \\x1B[90m 287 |\\x1B[39m         }\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m 288 |\\x1B[39m         \\x1B[36mif\\x1B[39m (error \\x1B[36minstanceof\\x1B[39m \\x1B[33mInvalidPackageError\\x1B[39m) {\\x1B[0m\\n' +\n      //     '\\x1B[0m\\x1B[31m\\x1B[1m>\\x1B[22m\\x1B[39m\\x1B[90m 289 |\\x1B[39m           \\x1B[36mthrow\\x1B[39m \\x1B[36mnew\\x1B[39m \\x1B[33mPackageResolutionError\\x1B[39m({\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m     |\\x1B[39m                 \\x1B[31m\\x1B[1m^\\x1B[22m\\x1B[39m\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m 290 |\\x1B[39m             packageError\\x1B[33m:\\x1B[39m error\\x1B[33m,\\x1B[39m\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m 291 |\\x1B[39m             originModulePath\\x1B[33m:\\x1B[39m \\x1B[36mfrom\\x1B[39m\\x1B[33m,\\x1B[39m\\x1B[0m\\n' +\n      //     '\\x1B[0m \\x1B[90m 292 |\\x1B[39m             targetModuleName\\x1B[33m:\\x1B[39m to\\x1B[33m,\\x1B[39m\\x1B[0m'\n      // }\n      // The Metro logger already showed this error.\n      throw new Error(data.message);\n    }\n\n    throw new Error(\n      'Invalid resources returned from the Metro serializer. Expected array, found: ' + data\n    );\n  }\n\n  async getStaticPageAsync(\n    pathname: string,\n    {\n      mode,\n      minify = mode !== 'development',\n      basePath,\n    }: {\n      mode: 'development' | 'production';\n      minify?: boolean;\n      basePath: string;\n    }\n  ) {\n    const devBundleUrlPathname = createBundleUrlPath({\n      platform: 'web',\n      mode,\n      environment: 'client',\n      mainModuleName: resolveMainModuleName(this.projectRoot, { platform: 'web' }),\n      lazy: shouldEnableAsyncImports(this.projectRoot),\n    });\n\n    const bundleStaticHtml = async (): Promise<string> => {\n      const { getStaticContent } = await getStaticRenderFunctions(\n        this.projectRoot,\n        this.getDevServerUrl()!,\n        {\n          minify: false,\n          dev: mode !== 'production',\n          // Ensure the API Routes are included\n          environment: 'node',\n        }\n      );\n\n      const location = new URL(pathname, this.getDevServerUrl()!);\n      return await getStaticContent(location);\n    };\n\n    const [resources, staticHtml] = await Promise.all([\n      this.getStaticResourcesAsync({ mode, minify }),\n      bundleStaticHtml(),\n    ]);\n    const content = await this.composeResourcesWithHtml({\n      mode,\n      resources,\n      template: staticHtml,\n      devBundleUrl: devBundleUrlPathname,\n      basePath,\n    });\n    return {\n      content,\n      resources,\n    };\n  }\n\n  async watchEnvironmentVariables() {\n    if (!this.instance) {\n      throw new Error(\n        'Cannot observe environment variable changes without a running Metro instance.'\n      );\n    }\n    if (!this.metro) {\n      // This can happen when the run command is used and the server is already running in another\n      // process.\n      debug('Skipping Environment Variable observation because Metro is not running (headless).');\n      return;\n    }\n\n    const envFiles = runtimeEnv\n      .getFiles(process.env.NODE_ENV)\n      .map((fileName) => path.join(this.projectRoot, fileName));\n\n    observeFileChanges(\n      {\n        metro: this.metro,\n        server: this.instance.server,\n      },\n      envFiles,\n      () => {\n        debug('Reloading environment variables...');\n        // Force reload the environment variables.\n        runtimeEnv.load(this.projectRoot, { force: true });\n      }\n    );\n  }\n\n  protected async startImplementationAsync(\n    options: BundlerStartOptions\n  ): Promise<DevServerInstance> {\n    options.port = await this.resolvePortAsync(options);\n    this.urlCreator = this.getUrlCreator(options);\n\n    const parsedOptions = {\n      port: options.port,\n      maxWorkers: options.maxWorkers,\n      resetCache: options.resetDevServer,\n\n      // Use the unversioned metro config.\n      // TODO: Deprecate this property when expo-cli goes away.\n      unversioned: false,\n    };\n\n    // Required for symbolication:\n    process.env.EXPO_DEV_SERVER_ORIGIN = `http://localhost:${options.port}`;\n\n    const { metro, server, middleware, messageSocket } = await instantiateMetroAsync(\n      this,\n      parsedOptions,\n      {\n        isExporting: !!options.isExporting,\n      }\n    );\n\n    const manifestMiddleware = await this.getManifestMiddlewareAsync(options);\n\n    // Important that we noop source maps for context modules as soon as possible.\n    prependMiddleware(middleware, new ContextModuleSourceMapsMiddleware().getHandler());\n\n    // We need the manifest handler to be the first middleware to run so our\n    // routes take precedence over static files. For example, the manifest is\n    // served from '/' and if the user has an index.html file in their project\n    // then the manifest handler will never run, the static middleware will run\n    // and serve index.html instead of the manifest.\n    // https://github.com/expo/expo/issues/13114\n    prependMiddleware(middleware, manifestMiddleware.getHandler());\n\n    middleware.use(\n      new InterstitialPageMiddleware(this.projectRoot, {\n        // TODO: Prevent this from becoming stale.\n        scheme: options.location.scheme ?? null,\n      }).getHandler()\n    );\n    middleware.use(new ReactDevToolsPageMiddleware(this.projectRoot).getHandler());\n\n    const deepLinkMiddleware = new RuntimeRedirectMiddleware(this.projectRoot, {\n      onDeepLink: getDeepLinkHandler(this.projectRoot),\n      getLocation: ({ runtime }) => {\n        if (runtime === 'custom') {\n          return this.urlCreator?.constructDevClientUrl();\n        } else {\n          return this.urlCreator?.constructUrl({\n            scheme: 'exp',\n          });\n        }\n      },\n    });\n    middleware.use(deepLinkMiddleware.getHandler());\n\n    middleware.use(new CreateFileMiddleware(this.projectRoot).getHandler());\n\n    // Append support for redirecting unhandled requests to the index.html page on web.\n    if (this.isTargetingWeb()) {\n      const { exp } = getConfig(this.projectRoot, { skipSDKVersionRequirement: true });\n      const useServerRendering = ['static', 'server'].includes(exp.web?.output ?? '');\n\n      // This MUST be after the manifest middleware so it doesn't have a chance to serve the template `public/index.html`.\n      middleware.use(new ServeStaticMiddleware(this.projectRoot).getHandler());\n\n      // This should come after the static middleware so it doesn't serve the favicon from `public/favicon.ico`.\n      middleware.use(new FaviconMiddleware(this.projectRoot).getHandler());\n\n      if (useServerRendering) {\n        const appDir = getRouterDirectoryWithManifest(this.projectRoot, exp);\n        middleware.use(\n          createRouteHandlerMiddleware(this.projectRoot, {\n            ...options,\n            appDir,\n            getWebBundleUrl: manifestMiddleware.getWebBundleUrl.bind(manifestMiddleware),\n            getStaticPageAsync: (pathname) => {\n              return this.getStaticPageAsync(pathname, {\n                mode: options.mode ?? 'development',\n                minify: options.minify,\n                // No base path in development\n                basePath: '',\n              });\n            },\n          })\n        );\n\n        // @ts-expect-error: TODO\n        if (exp.web?.output === 'server') {\n          // Cache observation for API Routes...\n          observeApiRouteChanges(\n            this.projectRoot,\n            {\n              metro,\n              server,\n            },\n            async (filepath, op) => {\n              if (isApiRouteConvention(filepath)) {\n                debug(`[expo-cli] ${op} ${filepath}`);\n                if (op === 'change' || op === 'add') {\n                  rebundleApiRoute(this.projectRoot, filepath, {\n                    ...options,\n                    appDir,\n                  });\n                }\n\n                if (op === 'delete') {\n                  // TODO: Cancel the bundling of the deleted route.\n                }\n              }\n            }\n          );\n        }\n      } else {\n        // This MUST run last since it's the fallback.\n        middleware.use(\n          new HistoryFallbackMiddleware(manifestMiddleware.getHandler().internal).getHandler()\n        );\n      }\n    }\n    // Extend the close method to ensure that we clean up the local info.\n    const originalClose = server.close.bind(server);\n\n    server.close = (callback?: (err?: Error) => void) => {\n      return originalClose((err?: Error) => {\n        this.instance = null;\n        this.metro = null;\n        callback?.(err);\n      });\n    };\n\n    this.metro = metro;\n    return {\n      server,\n      location: {\n        // The port is the main thing we want to send back.\n        port: options.port,\n        // localhost isn't always correct.\n        host: 'localhost',\n        // http is the only supported protocol on native.\n        url: `http://localhost:${options.port}`,\n        protocol: 'http',\n      },\n      middleware,\n      messageSocket,\n    };\n  }\n\n  public async waitForTypeScriptAsync(): Promise<boolean> {\n    if (!this.instance) {\n      throw new Error('Cannot wait for TypeScript without a running server.');\n    }\n\n    return new Promise<boolean>((resolve) => {\n      if (!this.metro) {\n        // This can happen when the run command is used and the server is already running in another\n        // process. In this case we can't wait for the TypeScript check to complete because we don't\n        // have access to the Metro server.\n        debug('Skipping TypeScript check because Metro is not running (headless).');\n        return resolve(false);\n      }\n\n      const off = metroWatchTypeScriptFiles({\n        projectRoot: this.projectRoot,\n        server: this.instance!.server,\n        metro: this.metro,\n        tsconfig: true,\n        throttle: true,\n        eventTypes: ['change', 'add'],\n        callback: async () => {\n          // Run once, this prevents the TypeScript project prerequisite from running on every file change.\n          off();\n          const { TypeScriptProjectPrerequisite } = await import(\n            '../../doctor/typescript/TypeScriptProjectPrerequisite.js'\n          );\n\n          try {\n            const req = new TypeScriptProjectPrerequisite(this.projectRoot);\n            await req.bootstrapAsync();\n            resolve(true);\n          } catch (error: any) {\n            // Ensure the process doesn't fail if the TypeScript check fails.\n            // This could happen during the install.\n            Log.log();\n            Log.error(\n              chalk.red`Failed to automatically setup TypeScript for your project. Try restarting the dev server to fix.`\n            );\n            Log.exception(error);\n            resolve(false);\n          }\n        },\n      });\n    });\n  }\n\n  public async startTypeScriptServices() {\n    return startTypescriptTypeGenerationAsync({\n      server: this.instance?.server,\n      metro: this.metro,\n      projectRoot: this.projectRoot,\n    });\n  }\n\n  protected getConfigModuleIds(): string[] {\n    return ['./metro.config.js', './metro.config.json', './rn-cli.config.js'];\n  }\n}\n\nexport function getDeepLinkHandler(projectRoot: string): DeepLinkHandler {\n  return async ({ runtime }) => {\n    if (runtime === 'expo') return;\n    const { exp } = getConfig(projectRoot);\n    await logEventAsync('dev client start command', {\n      status: 'started',\n      ...getDevClientProperties(projectRoot, exp),\n    });\n  };\n}\n\nfunction htmlFromSerialAssets(\n  assets: SerialAsset[],\n  {\n    dev,\n    template,\n    basePath,\n    bundleUrl,\n  }: {\n    dev: boolean;\n    template: string;\n    basePath: string;\n    /** This is dev-only. */\n    bundleUrl?: string;\n  }\n) {\n  // Combine the CSS modules into tags that have hot refresh data attributes.\n  const styleString = assets\n    .filter((asset) => asset.type === 'css')\n    .map(({ metadata, filename, source }) => {\n      if (dev) {\n        return `<style data-expo-css-hmr=\"${metadata.hmrId}\">` + source + '\\n</style>';\n      } else {\n        return [\n          `<link rel=\"preload\" href=\"${basePath}/${filename}\" as=\"style\">`,\n          `<link rel=\"stylesheet\" href=\"${basePath}/${filename}\">`,\n        ].join('');\n      }\n    })\n    .join('');\n\n  const jsAssets = assets.filter((asset) => asset.type === 'js');\n\n  const scripts = bundleUrl\n    ? `<script src=\"${bundleUrl}\" defer></script>`\n    : jsAssets\n        .map(({ filename }) => {\n          return `<script src=\"${basePath}/${filename}\" defer></script>`;\n        })\n        .join('');\n\n  return template\n    .replace('</head>', `${styleString}</head>`)\n    .replace('</body>', `${scripts}\\n</body>`);\n}\n"],"names":["getDeepLinkHandler","runtimeEnv","ForwardHtmlError","CommandError","constructor","message","html","statusCode","debug","require","EXPO_GO_METRO_PORT","DEV_CLIENT_METRO_PORT","MetroBundlerDevServer","BundlerDevServer","metro","name","resolvePortAsync","options","port","devClient","Number","process","env","RCT_METRO_PORT","getFreePortAsync","getExpoRouterRoutesManifestAsync","appDir","manifest","fetchManifest","projectRoot","asJson","exportExpoRouterApiRoutesAsync","mode","outputDir","files","Map","route","apiRoutes","filepath","path","join","file","contents","bundleApiRoute","getInstance","location","shouldThrow","artifactFilename","relative","replace","set","composeResourcesWithHtml","resources","template","devBundleUrl","basePath","isDev","htmlFromSerialAssets","dev","bundleUrl","undefined","getStaticRenderFunctionAsync","minify","url","getDevServerUrl","getStaticContent","getManifest","getStaticRenderFunctions","environment","fetchData","preserveApiRoutes","renderAsync","URL","getStaticResourcesAsync","includeMaps","data","devBundleUrlPathname","createBundleUrlPath","platform","serializerOutput","serializerIncludeMaps","mainModuleName","resolveMainModuleName","lazy","shouldEnableAsyncImports","results","fetch","toString","txt","text","JSON","parse","error","ok","startsWith","status","Log","Array","isArray","errors","type","match","Error","getStaticPageAsync","pathname","bundleStaticHtml","staticHtml","Promise","all","content","watchEnvironmentVariables","instance","envFiles","getFiles","NODE_ENV","map","fileName","observeFileChanges","server","load","force","startImplementationAsync","urlCreator","getUrlCreator","parsedOptions","maxWorkers","resetCache","resetDevServer","unversioned","EXPO_DEV_SERVER_ORIGIN","middleware","messageSocket","instantiateMetroAsync","isExporting","manifestMiddleware","getManifestMiddlewareAsync","prependMiddleware","ContextModuleSourceMapsMiddleware","getHandler","use","InterstitialPageMiddleware","scheme","ReactDevToolsPageMiddleware","deepLinkMiddleware","RuntimeRedirectMiddleware","onDeepLink","getLocation","runtime","constructDevClientUrl","constructUrl","CreateFileMiddleware","isTargetingWeb","exp","getConfig","skipSDKVersionRequirement","useServerRendering","includes","web","output","ServeStaticMiddleware","FaviconMiddleware","getRouterDirectoryWithManifest","createRouteHandlerMiddleware","getWebBundleUrl","bind","observeApiRouteChanges","op","isApiRouteConvention","rebundleApiRoute","HistoryFallbackMiddleware","internal","originalClose","close","callback","err","host","protocol","waitForTypeScriptAsync","resolve","off","metroWatchTypeScriptFiles","tsconfig","throttle","eventTypes","TypeScriptProjectPrerequisite","req","bootstrapAsync","log","chalk","red","exception","startTypeScriptServices","startTypescriptTypeGenerationAsync","getConfigModuleIds","logEventAsync","getDevClientProperties","assets","styleString","filter","asset","metadata","filename","source","hmrId","jsAssets","scripts"],"mappings":"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"}