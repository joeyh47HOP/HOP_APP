{"version":3,"sources":["../../../../../src/start/server/middleware/remoteDevtoolsSecurityHeadersMiddleware.ts"],"sourcesContent":["import type { IncomingMessage, ServerResponse } from 'http';\n\n// Like securityHeadersMiddleware but further allow cross-origin requests\n// from https://chrome-devtools-frontend.appspot.com/\nexport function remoteDevtoolsSecurityHeadersMiddleware(\n  req: IncomingMessage,\n  res: ServerResponse,\n  next: (err?: Error) => void\n) {\n  // Block any cross origin request.\n  if (\n    typeof req.headers.origin === 'string' &&\n    !req.headers.origin.match(/^https?:\\/\\/localhost:/) &&\n    !req.headers.origin.match(/^https:\\/\\/chrome-devtools-frontend\\.appspot\\.com/)\n  ) {\n    next(\n      new Error(\n        `Unauthorized request from ${req.headers.origin}. ` +\n          'This may happen because of a conflicting browser extension to intercept HTTP requests. ' +\n          'Please try again without browser extensions or using incognito mode.'\n      )\n    );\n    return;\n  }\n\n  // Block MIME-type sniffing.\n  res.setHeader('X-Content-Type-Options', 'nosniff');\n\n  next();\n}\n"],"names":["remoteDevtoolsSecurityHeadersMiddleware","req","res","next","headers","origin","match","Error","setHeader"],"mappings":"AAAA;;;;QAIgBA,uCAAuC,GAAvCA,uCAAuC;AAAhD,SAASA,uCAAuC,CACrDC,GAAoB,EACpBC,GAAmB,EACnBC,IAA2B,EAC3B;IACA,kCAAkC;IAClC,IACE,OAAOF,GAAG,CAACG,OAAO,CAACC,MAAM,KAAK,QAAQ,IACtC,CAACJ,GAAG,CAACG,OAAO,CAACC,MAAM,CAACC,KAAK,0BAA0B,IACnD,CAACL,GAAG,CAACG,OAAO,CAACC,MAAM,CAACC,KAAK,qDAAqD,EAC9E;QACAH,IAAI,CACF,IAAII,KAAK,CACP,CAAC,0BAA0B,EAAEN,GAAG,CAACG,OAAO,CAACC,MAAM,CAAC,EAAE,CAAC,GACjD,yFAAyF,GACzF,sEAAsE,CACzE,CACF,CAAC;QACF,OAAO;KACR;IAED,4BAA4B;IAC5BH,GAAG,CAACM,SAAS,CAAC,wBAAwB,EAAE,SAAS,CAAC,CAAC;IAEnDL,IAAI,EAAE,CAAC;CACR"}