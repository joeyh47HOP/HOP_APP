{"version":3,"sources":["../../../../../../src/start/server/middleware/inspector/JsInspector.ts"],"sourcesContent":["import fetch from 'node-fetch';\n\nimport { launchBrowserAsync, type LaunchBrowserInstance } from './LaunchBrowser';\n\nexport interface MetroInspectorProxyApp {\n  description: string;\n  devtoolsFrontendUrl: string;\n  faviconUrl: string;\n  id: string;\n  title: string;\n  type: 'node';\n  vm: 'Hermes' | \"don't use\";\n  webSocketDebuggerUrl: string;\n}\n\nlet openingBrowserInstance: LaunchBrowserInstance | null = null;\n\nexport async function openJsInspector(app: MetroInspectorProxyApp) {\n  // To update devtoolsFrontendRev, find the full commit hash in the url:\n  // https://chromium.googlesource.com/chromium/src.git/+log/refs/tags/{CHROME_VERSION}/chrome/VERSION\n  //\n  // 1. Replace {CHROME_VERSION} with the target chrome version\n  // 2. Click the first log item in the webpage\n  // 3. The full commit hash is the desired revision\n  const devtoolsFrontendRev = 'd9568d04d7dd79269c5a655d7ada69650c5a8336'; // Chrome 100.0.4896.75\n\n  const urlBase = `https://chrome-devtools-frontend.appspot.com/serve_rev/@${devtoolsFrontendRev}/devtools_app.html`;\n  const ws = app.webSocketDebuggerUrl.replace(/^ws:\\/\\//, '');\n  const url = `${urlBase}?panel=console&ws=${encodeURIComponent(ws)}`;\n  await closeJsInspector();\n  openingBrowserInstance = await launchBrowserAsync(url);\n}\n\nexport async function closeJsInspector() {\n  await openingBrowserInstance?.close();\n  openingBrowserInstance = null;\n}\n\nexport async function queryInspectorAppAsync(\n  metroServerOrigin: string,\n  appId: string\n): Promise<MetroInspectorProxyApp | null> {\n  const apps = await queryAllInspectorAppsAsync(metroServerOrigin);\n  return apps.find((app) => app.description === appId) ?? null;\n}\n\nexport async function queryAllInspectorAppsAsync(\n  metroServerOrigin: string\n): Promise<MetroInspectorProxyApp[]> {\n  const resp = await fetch(`${metroServerOrigin}/json/list`);\n  const apps: MetroInspectorProxyApp[] = transformApps(await resp.json());\n  // Only use targets with better reloading support\n  return apps.filter((app) => app.title === 'React Native Experimental (Improved Chrome Reloads)');\n}\n\n// The description of `React Native Experimental (Improved Chrome Reloads)` target is `don't use` from metro.\n// This function tries to transform the unmeaningful description to appId\nfunction transformApps(apps: MetroInspectorProxyApp[]): MetroInspectorProxyApp[] {\n  const deviceIdToAppId: Record<string, string> = {};\n\n  for (const app of apps) {\n    if (app.description !== \"don't use\") {\n      const deviceId = app.id.split('-')[0];\n      const appId = app.description;\n      deviceIdToAppId[deviceId] = appId;\n    }\n  }\n\n  return apps.map((app) => {\n    if (app.description === \"don't use\") {\n      const deviceId = app.id.split('-')[0];\n      app.description = deviceIdToAppId[deviceId] ?? app.description;\n    }\n    return app;\n  });\n}\n"],"names":["openJsInspector","closeJsInspector","queryInspectorAppAsync","queryAllInspectorAppsAsync","openingBrowserInstance","app","devtoolsFrontendRev","urlBase","ws","webSocketDebuggerUrl","replace","url","encodeURIComponent","launchBrowserAsync","close","metroServerOrigin","appId","apps","find","description","resp","fetch","transformApps","json","filter","title","deviceIdToAppId","deviceId","id","split","map"],"mappings":"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"}