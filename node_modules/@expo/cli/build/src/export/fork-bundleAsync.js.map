{"version":3,"sources":["../../../src/export/fork-bundleAsync.ts"],"sourcesContent":["import { ExpoConfig, getConfigFilePaths, Platform, ProjectConfig } from '@expo/config';\nimport type { LoadOptions } from '@expo/metro-config';\nimport chalk from 'chalk';\nimport Metro, { AssetData } from 'metro';\nimport getMetroAssets from 'metro/src/DeltaBundler/Serializers/getAssets';\nimport splitBundleOptions from 'metro/src/lib/splitBundleOptions';\nimport type { BundleOptions as MetroBundleOptions } from 'metro/src/shared/types';\nimport { ConfigT } from 'metro-config';\n\nimport {\n  buildHermesBundleAsync,\n  isEnableHermesManaged,\n  maybeThrowFromInconsistentEngineAsync,\n} from './exportHermes';\nimport { CSSAsset, getCssModulesFromBundler } from '../start/server/metro/getCssModulesFromBundler';\nimport { loadMetroConfigAsync } from '../start/server/metro/instantiateMetro';\nimport {\n  importMetroFromProject,\n  importMetroServerFromProject,\n} from '../start/server/metro/resolveFromProject';\nimport { getEntryWithServerRoot } from '../start/server/middleware/ManifestMiddleware';\n\nexport type MetroDevServerOptions = LoadOptions;\n\nexport type BundleOptions = {\n  entryPoint: string;\n  platform: 'android' | 'ios' | 'web';\n  dev?: boolean;\n  minify?: boolean;\n  sourceMapUrl?: string;\n  sourcemaps?: boolean;\n};\nexport type BundleAssetWithFileHashes = Metro.AssetData & {\n  fileHashes: string[]; // added by the hashAssets asset plugin\n};\nexport type BundleOutput = {\n  code: string;\n  map: string;\n  hermesBytecodeBundle?: Uint8Array;\n  hermesSourcemap?: string;\n  css: CSSAsset[];\n  assets: readonly BundleAssetWithFileHashes[];\n};\n\nlet nextBuildID = 0;\n\nasync function assertEngineMismatchAsync(\n  projectRoot: string,\n  exp: Pick<ExpoConfig, 'ios' | 'android' | 'jsEngine'>,\n  platform: Platform\n) {\n  const isHermesManaged = isEnableHermesManaged(exp, platform);\n\n  const paths = getConfigFilePaths(projectRoot);\n  const configFilePath = paths.dynamicConfigPath ?? paths.staticConfigPath ?? 'app.json';\n  await maybeThrowFromInconsistentEngineAsync(\n    projectRoot,\n    configFilePath,\n    platform,\n    isHermesManaged\n  );\n}\n\nexport async function createBundlesAsync(\n  projectRoot: string,\n  projectConfig: ProjectConfig,\n  bundleOptions: {\n    clear?: boolean;\n    maxWorkers?: number;\n    platforms: Platform[];\n    dev?: boolean;\n    minify?: boolean;\n    sourcemaps?: boolean;\n  }\n): Promise<Partial<Record<Platform, BundleOutput>>> {\n  if (!bundleOptions.platforms.length) {\n    return {};\n  }\n  const { exp, pkg } = projectConfig;\n\n  const bundles = await bundleProductionMetroClientAsync(\n    projectRoot,\n    exp,\n    {\n      // If not legacy, ignore the target option to prevent warnings from being thrown.\n      resetCache: bundleOptions.clear,\n      maxWorkers: bundleOptions.maxWorkers,\n    },\n    bundleOptions.platforms.map((platform: Platform) => ({\n      platform,\n      entryPoint: getEntryWithServerRoot(projectRoot, { platform, pkg }),\n      sourcemaps: bundleOptions.sourcemaps,\n      minify: bundleOptions.minify,\n      dev: bundleOptions.dev,\n    }))\n  );\n\n  // { ios: bundle, android: bundle }\n  return bundleOptions.platforms.reduce<Partial<Record<Platform, BundleOutput>>>(\n    (prev, platform, index) => ({\n      ...prev,\n      [platform]: bundles[index],\n    }),\n    {}\n  );\n}\n\nasync function bundleProductionMetroClientAsync(\n  projectRoot: string,\n  expoConfig: ExpoConfig,\n  metroOptions: MetroDevServerOptions,\n  bundles: BundleOptions[]\n): Promise<BundleOutput[]> {\n  // Assert early so the user doesn't have to wait until bundling is complete to find out that\n  // Hermes won't be available.\n  await Promise.all(\n    bundles.map(({ platform }) => assertEngineMismatchAsync(projectRoot, expoConfig, platform))\n  );\n\n  const metro = importMetroFromProject(projectRoot);\n  const Server = importMetroServerFromProject(projectRoot);\n\n  const { config, reporter } = await loadMetroConfigAsync(projectRoot, metroOptions, {\n    exp: expoConfig,\n    isExporting: true,\n  });\n\n  const metroServer = await metro.runMetro(config, {\n    watch: false,\n  });\n\n  const buildAsync = async (bundle: BundleOptions): Promise<BundleOutput> => {\n    const buildID = `bundle_${nextBuildID++}_${bundle.platform}`;\n    const isHermes = isEnableHermesManaged(expoConfig, bundle.platform);\n    const bundleOptions: MetroBundleOptions = {\n      ...Server.DEFAULT_BUNDLE_OPTIONS,\n      bundleType: 'bundle',\n      platform: bundle.platform,\n      entryFile: bundle.entryPoint,\n      dev: bundle.dev ?? false,\n      minify: !isHermes && (bundle.minify ?? !bundle.dev),\n      inlineSourceMap: false,\n      sourceMapUrl: bundle.sourceMapUrl,\n      createModuleIdFactory: config.serializer.createModuleIdFactory,\n      onProgress: (transformedFileCount: number, totalFileCount: number) => {\n        reporter.update({\n          buildID,\n          type: 'bundle_transform_progressed',\n          transformedFileCount,\n          totalFileCount,\n        });\n      },\n    };\n    const bundleDetails = {\n      ...bundleOptions,\n      buildID,\n    };\n    reporter.update({\n      buildID,\n      type: 'bundle_build_started',\n      bundleDetails,\n    });\n    try {\n      const { code, map } = await metroServer.build(bundleOptions);\n      const [assets, css] = await Promise.all([\n        getAssets(metroServer, bundleOptions),\n        getCssModulesFromBundler(config, metroServer.getBundler(), bundleOptions),\n      ]);\n\n      reporter.update({\n        buildID,\n        type: 'bundle_build_done',\n      });\n      return { code, map, assets: assets as readonly BundleAssetWithFileHashes[], css };\n    } catch (error) {\n      reporter.update({\n        buildID,\n        type: 'bundle_build_failed',\n      });\n\n      throw error;\n    }\n  };\n\n  const maybeAddHermesBundleAsync = async (\n    bundle: BundleOptions,\n    bundleOutput: BundleOutput\n  ): Promise<BundleOutput> => {\n    const { platform } = bundle;\n    const isHermesManaged = isEnableHermesManaged(expoConfig, platform);\n    if (isHermesManaged) {\n      const platformTag = chalk.bold(\n        { ios: 'iOS', android: 'Android', web: 'Web' }[platform] || platform\n      );\n\n      reporter.terminal.log(`${platformTag} Building Hermes bytecode for the bundle`);\n\n      const hermesBundleOutput = await buildHermesBundleAsync(projectRoot, {\n        code: bundleOutput.code,\n        map: bundle.sourcemaps ? bundleOutput.map : null,\n        minify: bundle.minify ?? !bundle.dev,\n      });\n      bundleOutput.hermesBytecodeBundle = hermesBundleOutput.hbc;\n      bundleOutput.hermesSourcemap = hermesBundleOutput.sourcemap ?? undefined;\n    }\n    return bundleOutput;\n  };\n\n  try {\n    const intermediateOutputs = await Promise.all(bundles.map((bundle) => buildAsync(bundle)));\n    const bundleOutputs: BundleOutput[] = [];\n    for (let i = 0; i < bundles.length; ++i) {\n      // hermesc does not support parallel building even we spawn processes.\n      // we should build them sequentially.\n      bundleOutputs.push(await maybeAddHermesBundleAsync(bundles[i], intermediateOutputs[i]));\n    }\n    return bundleOutputs;\n  } catch (error) {\n    // New line so errors don't show up inline with the progress bar\n    console.log('');\n    throw error;\n  } finally {\n    metroServer.end();\n  }\n}\n\n// Forked out of Metro because the `this._getServerRootDir()` doesn't match the development\n// behavior.\nexport async function getAssets(\n  metro: Metro.Server,\n  options: MetroBundleOptions\n): Promise<readonly AssetData[]> {\n  const { entryFile, onProgress, resolverOptions, transformOptions } = splitBundleOptions(options);\n\n  // @ts-expect-error: _bundler isn't exposed on the type.\n  const dependencies = await metro._bundler.getDependencies(\n    [entryFile],\n    transformOptions,\n    resolverOptions,\n    { onProgress, shallow: false, lazy: false }\n  );\n\n  // @ts-expect-error\n  const _config = metro._config as ConfigT;\n\n  return await getMetroAssets(dependencies, {\n    processModuleFilter: _config.serializer.processModuleFilter,\n    assetPlugins: _config.transformer.assetPlugins,\n    platform: transformOptions.platform!,\n    projectRoot: _config.projectRoot, // this._getServerRootDir(),\n    publicPath: _config.transformer.publicPath,\n  });\n}\n"],"names":["createBundlesAsync","getAssets","nextBuildID","assertEngineMismatchAsync","projectRoot","exp","platform","isHermesManaged","isEnableHermesManaged","paths","getConfigFilePaths","configFilePath","dynamicConfigPath","staticConfigPath","maybeThrowFromInconsistentEngineAsync","projectConfig","bundleOptions","platforms","length","pkg","bundles","bundleProductionMetroClientAsync","resetCache","clear","maxWorkers","map","entryPoint","getEntryWithServerRoot","sourcemaps","minify","dev","reduce","prev","index","expoConfig","metroOptions","Promise","all","metro","importMetroFromProject","Server","importMetroServerFromProject","config","reporter","loadMetroConfigAsync","isExporting","metroServer","runMetro","watch","buildAsync","bundle","buildID","isHermes","DEFAULT_BUNDLE_OPTIONS","bundleType","entryFile","inlineSourceMap","sourceMapUrl","createModuleIdFactory","serializer","onProgress","transformedFileCount","totalFileCount","update","type","bundleDetails","code","build","assets","css","getCssModulesFromBundler","getBundler","error","maybeAddHermesBundleAsync","bundleOutput","platformTag","chalk","bold","ios","android","web","terminal","log","hermesBundleOutput","buildHermesBundleAsync","hermesBytecodeBundle","hbc","hermesSourcemap","sourcemap","undefined","intermediateOutputs","bundleOutputs","i","push","console","end","options","resolverOptions","transformOptions","splitBundleOptions","dependencies","_bundler","getDependencies","shallow","lazy","_config","getMetroAssets","processModuleFilter","assetPlugins","transformer","publicPath"],"mappings":"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"}