{"version":3,"sources":["../../../src/export/exportStaticAsync.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { getConfig } from '@expo/config';\nimport assert from 'assert';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\nimport prettyBytes from 'pretty-bytes';\nimport { inspect } from 'util';\n\nimport { getVirtualFaviconAssetsAsync } from './favicon';\nimport { Log } from '../log';\nimport { DevServerManager } from '../start/server/DevServerManager';\nimport { MetroBundlerDevServer } from '../start/server/metro/MetroBundlerDevServer';\nimport { logMetroErrorAsync } from '../start/server/metro/metroErrorInterface';\nimport {\n  getApiRoutesForDirectory,\n  getRouterDirectoryWithManifest,\n} from '../start/server/metro/router';\nimport { learnMore } from '../utils/link';\n\nconst debug = require('debug')('expo:export:generateStaticRoutes') as typeof console.log;\n\ntype Options = {\n  outputDir: string;\n  minify: boolean;\n  exportServer: boolean;\n  basePath: string;\n  includeMaps: boolean;\n};\n\n/** @private */\nexport async function unstable_exportStaticAsync(projectRoot: string, options: Options) {\n  Log.warn(\n    `Experimental static rendering is enabled. ` +\n      learnMore('https://docs.expo.dev/router/reference/static-rendering/')\n  );\n\n  // TODO: Prevent starting the watcher.\n  const devServerManager = new DevServerManager(projectRoot, {\n    minify: options.minify,\n    mode: 'production',\n    location: {},\n  });\n  await devServerManager.startAsync([\n    {\n      type: 'metro',\n      options: {\n        location: {},\n        isExporting: true,\n      },\n    },\n  ]);\n\n  try {\n    await exportFromServerAsync(projectRoot, devServerManager, options);\n  } finally {\n    await devServerManager.stopAsync();\n  }\n}\n\n/** Match `(page)` -> `page` */\nfunction matchGroupName(name: string): string | undefined {\n  return name.match(/^\\(([^/]+?)\\)$/)?.[1];\n}\n\nexport async function getFilesToExportFromServerAsync(\n  projectRoot: string,\n  {\n    manifest,\n    renderAsync,\n    includeGroupVariations,\n  }: {\n    manifest: any;\n    renderAsync: (pathname: string) => Promise<string>;\n    includeGroupVariations?: boolean;\n  }\n): Promise<Map<string, string>> {\n  // name : contents\n  const files = new Map<string, string>();\n\n  await Promise.all(\n    getHtmlFiles({ manifest, includeGroupVariations }).map(async (outputPath) => {\n      const pathname = outputPath.replace(/(?:index)?\\.html$/, '');\n      try {\n        files.set(outputPath, '');\n        const data = await renderAsync(pathname);\n        files.set(outputPath, data);\n      } catch (e: any) {\n        await logMetroErrorAsync({ error: e, projectRoot });\n        throw new Error('Failed to statically export route: ' + pathname);\n      }\n    })\n  );\n\n  return files;\n}\n\n/** Perform all fs commits */\nexport async function exportFromServerAsync(\n  projectRoot: string,\n  devServerManager: DevServerManager,\n  { outputDir, basePath, exportServer, minify, includeMaps }: Options\n): Promise<void> {\n  const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n  const appDir = getRouterDirectoryWithManifest(projectRoot, exp);\n\n  const injectFaviconTag = await getVirtualFaviconAssetsAsync(projectRoot, { outputDir, basePath });\n\n  const devServer = devServerManager.getDefaultDevServer();\n  assert(devServer instanceof MetroBundlerDevServer);\n\n  const [resources, { manifest, renderAsync }] = await Promise.all([\n    devServer.getStaticResourcesAsync({ mode: 'production', minify, includeMaps }),\n    devServer.getStaticRenderFunctionAsync({\n      mode: 'production',\n      minify,\n    }),\n  ]);\n\n  debug('Routes:\\n', inspect(manifest, { colors: true, depth: null }));\n\n  const files = await getFilesToExportFromServerAsync(projectRoot, {\n    manifest,\n    // Servers can handle group routes automatically and therefore\n    // don't require the build-time generation of every possible group\n    // variation.\n    includeGroupVariations: !exportServer,\n    async renderAsync(pathname: string) {\n      const template = await renderAsync(pathname);\n      let html = await devServer.composeResourcesWithHtml({\n        mode: 'production',\n        resources,\n        template,\n        basePath,\n      });\n\n      if (injectFaviconTag) {\n        html = injectFaviconTag(html);\n      }\n\n      return html;\n    },\n  });\n\n  resources.forEach((resource) => {\n    files.set(\n      resource.filename,\n      modifyBundlesWithSourceMaps(resource.filename, resource.source, includeMaps)\n    );\n  });\n\n  if (exportServer) {\n    const apiRoutes = await exportApiRoutesAsync({ outputDir, server: devServer, appDir });\n\n    // Add the api routes to the files to export.\n    for (const [route, contents] of apiRoutes) {\n      files.set(route, contents);\n    }\n  } else {\n    warnPossibleInvalidExportType(appDir);\n  }\n\n  fs.mkdirSync(path.join(outputDir), { recursive: true });\n\n  Log.log('');\n  Log.log(chalk.bold`Exporting ${files.size} files:`);\n  await Promise.all(\n    [...files.entries()]\n      .sort(([a], [b]) => a.localeCompare(b))\n      .map(async ([file, contents]) => {\n        const length = Buffer.byteLength(contents, 'utf8');\n        Log.log(file, chalk.gray`(${prettyBytes(length)})`);\n        const outputPath = path.join(outputDir, file);\n        await fs.promises.mkdir(path.dirname(outputPath), { recursive: true });\n        await fs.promises.writeFile(outputPath, contents);\n      })\n  );\n  Log.log('');\n}\n\nexport function modifyBundlesWithSourceMaps(\n  filename: string,\n  source: string,\n  includeMaps: boolean\n): string {\n  if (filename.endsWith('.js')) {\n    // If the bundle ends with source map URLs then update them to point to the correct location.\n\n    // TODO: basePath support\n    const normalizedFilename = '/' + filename.replace(/^\\/+/, '');\n    //# sourceMappingURL=//localhost:8085/index.map?platform=web&dev=false&hot=false&lazy=true&minify=true&resolver.environment=client&transform.environment=client&serializer.output=static\n    //# sourceURL=http://localhost:8085/index.bundle//&platform=web&dev=false&hot=false&lazy=true&minify=true&resolver.environment=client&transform.environment=client&serializer.output=static\n    return source.replace(/^\\/\\/# (sourceMappingURL|sourceURL)=.*$/gm, (...props) => {\n      if (includeMaps) {\n        if (props[1] === 'sourceURL') {\n          return `//# ${props[1]}=` + normalizedFilename;\n        } else if (props[1] === 'sourceMappingURL') {\n          const mapName = normalizedFilename + '.map';\n          return `//# ${props[1]}=` + mapName;\n        }\n      }\n      return '';\n    });\n  }\n  return source;\n}\n\nexport function getHtmlFiles({\n  manifest,\n  includeGroupVariations,\n}: {\n  manifest: any;\n  includeGroupVariations?: boolean;\n}): string[] {\n  const htmlFiles = new Set<string>();\n\n  function traverseScreens(screens: string | { screens: any; path: string }, basePath = '') {\n    for (const value of Object.values(screens)) {\n      if (typeof value === 'string') {\n        let filePath = basePath + value;\n        if (value === '') {\n          filePath =\n            basePath === ''\n              ? 'index'\n              : basePath.endsWith('/')\n              ? basePath + 'index'\n              : basePath.slice(0, -1);\n        }\n        if (includeGroupVariations) {\n          // TODO: Dedupe requests for alias routes.\n          addOptionalGroups(filePath);\n        } else {\n          htmlFiles.add(filePath);\n        }\n      } else if (typeof value === 'object' && value?.screens) {\n        const newPath = basePath + value.path + '/';\n        traverseScreens(value.screens, newPath);\n      }\n    }\n  }\n\n  function addOptionalGroups(path: string) {\n    const variations = getPathVariations(path);\n    for (const variation of variations) {\n      htmlFiles.add(variation);\n    }\n  }\n\n  traverseScreens(manifest.screens);\n\n  return Array.from(htmlFiles).map((value) => {\n    const parts = value.split('/');\n    // Replace `:foo` with `[foo]` and `*foo` with `[...foo]`\n    const partsWithGroups = parts.map((part) => {\n      if (part === '*not-found') {\n        return `+not-found`;\n      } else if (part.startsWith(':')) {\n        return `[${part.slice(1)}]`;\n      } else if (part.startsWith('*')) {\n        return `[...${part.slice(1)}]`;\n      }\n      return part;\n    });\n    return partsWithGroups.join('/') + '.html';\n  });\n}\n\n// Given a route like `(foo)/bar/(baz)`, return all possible variations of the route.\n// e.g. `(foo)/bar/(baz)`, `(foo)/bar/baz`, `foo/bar/(baz)`, `foo/bar/baz`,\nexport function getPathVariations(routePath: string): string[] {\n  const variations = new Set<string>();\n  const segments = routePath.split('/');\n\n  function generateVariations(segments: string[], current = ''): void {\n    if (segments.length === 0) {\n      if (current) variations.add(current);\n      return;\n    }\n\n    const [head, ...rest] = segments;\n\n    if (head.startsWith('(foo,foo')) {\n    }\n\n    if (matchGroupName(head)) {\n      const groups = head.slice(1, -1).split(',');\n\n      if (groups.length > 1) {\n        for (const group of groups) {\n          // If there are multiple groups, recurse on each group.\n          generateVariations([`(${group.trim()})`, ...rest], current);\n        }\n        return;\n      } else {\n        // Start a fork where this group is included\n        generateVariations(rest, current ? `${current}/(${groups[0]})` : `(${groups[0]})`);\n        // This code will continue and add paths without this group included`\n      }\n    } else if (current) {\n      current = `${current}/${head}`;\n    } else {\n      current = head;\n    }\n\n    generateVariations(rest, current);\n  }\n\n  generateVariations(segments);\n\n  return Array.from(variations);\n}\n\nasync function exportApiRoutesAsync({\n  outputDir,\n  server,\n  appDir,\n}: {\n  outputDir: string;\n  server: MetroBundlerDevServer;\n  appDir: string;\n}): Promise<Map<string, string>> {\n  const functionsDir = '_expo/functions';\n  const funcDir = path.join(outputDir, functionsDir);\n  fs.mkdirSync(path.join(funcDir), { recursive: true });\n\n  const { manifest, files } = await server.exportExpoRouterApiRoutesAsync({\n    mode: 'production',\n    appDir,\n    outputDir: functionsDir,\n  });\n\n  Log.log(chalk.bold`Exporting ${files.size} API Routes.`);\n\n  files.set('_expo/routes.json', JSON.stringify(manifest, null, 2));\n\n  return files;\n}\n\nfunction warnPossibleInvalidExportType(appDir: string) {\n  const apiRoutes = getApiRoutesForDirectory(appDir);\n  if (apiRoutes.length) {\n    // TODO: Allow API Routes for native-only.\n    Log.warn(\n      chalk.yellow`Skipping export for API routes because \\`web.output\\` is not \"server\". You may want to remove the routes: ${apiRoutes\n        .map((v) => path.relative(appDir, v))\n        .join(', ')}`\n    );\n  }\n}\n"],"names":["unstable_exportStaticAsync","getFilesToExportFromServerAsync","exportFromServerAsync","modifyBundlesWithSourceMaps","getHtmlFiles","getPathVariations","debug","require","projectRoot","options","Log","warn","learnMore","devServerManager","DevServerManager","minify","mode","location","startAsync","type","isExporting","stopAsync","matchGroupName","name","match","manifest","renderAsync","includeGroupVariations","files","Map","Promise","all","map","outputPath","pathname","replace","set","data","e","logMetroErrorAsync","error","Error","outputDir","basePath","exportServer","includeMaps","exp","getConfig","skipSDKVersionRequirement","appDir","getRouterDirectoryWithManifest","injectFaviconTag","getVirtualFaviconAssetsAsync","devServer","getDefaultDevServer","assert","MetroBundlerDevServer","resources","getStaticResourcesAsync","getStaticRenderFunctionAsync","inspect","colors","depth","template","html","composeResourcesWithHtml","forEach","resource","filename","source","apiRoutes","exportApiRoutesAsync","server","route","contents","warnPossibleInvalidExportType","fs","mkdirSync","path","join","recursive","log","chalk","bold","size","entries","sort","a","b","localeCompare","file","length","Buffer","byteLength","gray","prettyBytes","promises","mkdir","dirname","writeFile","endsWith","normalizedFilename","props","mapName","htmlFiles","Set","traverseScreens","screens","value","Object","values","filePath","slice","addOptionalGroups","add","newPath","variations","variation","Array","from","parts","split","partsWithGroups","part","startsWith","routePath","segments","generateVariations","current","head","rest","groups","group","trim","functionsDir","funcDir","exportExpoRouterApiRoutesAsync","JSON","stringify","getApiRoutesForDirectory","yellow","v","relative"],"mappings":"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"}